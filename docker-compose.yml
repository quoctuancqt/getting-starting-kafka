version: '2.1'

services:
  # mosquitto:
  #   image: eclipse-mosquitto:latest
  #   hostname: mosquitto
  #   container_name: mosquitto
  #   expose:
  #    - "1883"
  #   ports:
  #     - "1883:1883"
  #   volumes:
  #     - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf

      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  broker:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - broker

  
  # kafka-rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.2.1
  #   hostname: kafka-rest-proxy
  #   container_name: kafka-rest-proxy
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     # KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
  #     KAFKA_REST_HOST_NAME: kafka-rest-proxy
  #     KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - kafka-schema-registry

  
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.2.1
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      # CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 1
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      # CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      # CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      # CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components'
    volumes:
      - ./connectors:/etc/kafka-connect/jars/
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      # - kafka-rest-proxy
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-mqtt:latest
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.8.0
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest
        /etc/confluent/docker/run
  
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.2.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksqldb-server_
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      # KSQL_KSQL_QUERIES_FILE: /etc/ksql/scripts/create_streams.sql
      KSQL_KSQL_SINK_REPLICAS: 1
      KSQL_KSQL_SINK_PARTITIONS: 1
    depends_on:
      - zookeeper
      - kafka
      - kafka-connect
      - kafka-schema-registry

  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:7.2.1
  #   container_name: control-center
  #   restart: always
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - kafka-connect
  #   ports:
  #     - "9021:9021"
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
  #     CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
  #     CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
  #     CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
  #     CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
  #     CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
  #     CONTROL_CENTER_CONNECT_CLUSTER: "http://kafka-connect:8083"
  #     CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
  #     CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://ksql-server:8088"
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
  #     CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
  #     CONTROL_CENTER_ID: "MY_C3"

  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   ports:
  #     - 5433:5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres

  # mongo-db:
  #   image: mongo:4.0.5
  #   hostname: mongo-db
  #   container_name: mongo-db
  #   expose:
  #     - "27017"
  #   ports:
  #     - "27017:27017"
  #   command: --bind_ip_all --smallfiles
  #   volumes:
  #     - ./mongo-db:/data

  # mongoclient:
  #   image: mongoclient/mongoclient:2.2.0
  #   container_name: mongoclient
  #   hostname: mongoclient
  #   depends_on:
  #     - mongo-db
  #   ports:
  #     - 3000:3000
  #   environment:
  #     MONGO_URL: "mongodb://mongo-db:27017"
  #     PORT: 3000
  #   expose:
  #     - "3000"